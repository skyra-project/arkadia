// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Database.Migrations
{
    [DbContext(typeof(ArkadiaDbContext))]
    partial class ArkadiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Database.Models.Entities.CdnEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("content_type");

                    b.Property<string>("ETag")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("e_tag");

                    b.Property<long>("LastModifiedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_cdn_entry");

                    b.ToTable("cdn-entry");
                });

            modelBuilder.Entity("Database.Models.Entities.Guild", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("id");

                    b.Property<string>("YoutubeUploadLiveChannel")
                        .HasColumnType("character varying(19)")
                        .HasColumnName("notifications.youtube.live.channel");

                    b.Property<string>("YoutubeUploadLiveMessage")
                        .HasColumnType("text")
                        .HasColumnName("notifications.youtube.live.message");

                    b.Property<string>("YoutubeUploadNotificationChannel")
                        .HasColumnType("character varying(19)")
                        .HasColumnName("notifications.youtube.upload.channel");

                    b.Property<string>("YoutubeUploadNotificationMessage")
                        .HasColumnType("text")
                        .HasColumnName("notifications.youtube.upload.message");

                    b.HasKey("Id")
                        .HasName("pk_guilds");

                    b.ToTable("guilds");
                });

            modelBuilder.Entity("Database.Models.Entities.YoutubeSubscription", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("id");

                    b.Property<string[]>("AlreadySeenIds")
                        .IsRequired()
                        .HasColumnType("character varying(11)[]")
                        .HasColumnName("already_seen_ids");

                    b.Property<string>("ChannelTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("channel_title");

                    b.Property<long>("ExpiresAt")
                        .HasColumnType("bigint")
                        .HasColumnName("expires_at");

                    b.Property<string[]>("GuildIds")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("guild_ids");

                    b.HasKey("Id")
                        .HasName("pk_youtube_subscription");

                    b.ToTable("youtube_subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
