name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  DotNetCI:
    name: Dotnet Build & Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ghcr.io/skyra-project/postgres:latest
        env:
          POSTGRES_DB: arkadia-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout Project
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
        with:
          submodules: true
      - name: Setup .NET Core
        uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # tag=v2
        with:
          dotnet-version: '6.0.x'
      - name: Restore CI Cache
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2.1.7
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
      - name: Build C# code
        run: dotnet build
      - name: Run C# unit tests
        run: dotnet test tests/UnitTests --collect:"XPlat Code Coverage" --settings coverlet.runsettings -c Release
      - name: Store code coverage report (Unit Tests)
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # renovate: tag=v2
        with:
          name: dotnet-coverage-unit
          path: tests/UnitTests/TestResults/
      - name: Run C# integration tests
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
          dotnet tool run dotnet-ef database update --project sources/Database
          dotnet test tests/IntegrationTests --collect:"XPlat Code Coverage" --settings coverlet.runsettings -c Release
        env:
          POSTGRES_DB: skyra-dotnet-test
      - name: Store code coverage report (Integration Tests)
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # renovate: tag=v2
        with:
          name: dotnet-coverage-integration
          path: tests/IntegrationTests/TestResults/

  Upload_Coverage_Report:
    name: Upload coverage report to codecov
    needs: DotNetCI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
        with:
          fetch-depth: 2
      - name: Download DotNet Unit Test Coverage report
        uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # renovate: tag=v2
        with:
          name: dotnet-coverage-unit
          path: tests/UnitTests/TestResults/
      - name: Download DotNet IT Coverage report
        uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # renovate: tag=v2
        with:
          name: dotnet-coverage-integration
          path: tests/IntegrationTests/TestResults/
      - name: Codecov Upload
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # renovate: tag=v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
