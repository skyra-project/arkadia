// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Database.Migrations
{
    [DbContext(typeof(ArkadiaDbContext))]
    [Migration("20210806083606_V02_AddCDN")]
    partial class V02_AddCDN
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Database.Models.Entities.CdnEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("content_type");

                    b.Property<string>("ETag")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("e_tag");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_cdn_entry");

                    b.ToTable("cdn-entry");
                });

            modelBuilder.Entity("Database.Models.Entities.Guild", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("id");

                    b.Property<string>("AfkPrefix")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("afk.prefix");

                    b.Property<bool>("AfkPrefixForce")
                        .HasColumnType("boolean")
                        .HasColumnName("afk.prefix-force");

                    b.Property<string>("AfkRole")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("afk.role");

                    b.Property<string>("BirthdayChannel")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("birthday.channel");

                    b.Property<string>("BirthdayMessage")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("birthday.message");

                    b.Property<string>("BirthdayRole")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("birthday.role");

                    b.Property<string>("ChannelsAnnouncements")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.announcements");

                    b.Property<string>("ChannelsFarewell")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.farewell");

                    b.Property<string>("ChannelsGreeting")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.greeting");

                    b.Property<string[]>("ChannelsIgnoreAll")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("channels.ignore.all");

                    b.Property<string[]>("ChannelsIgnoreMessageDelete")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("channels.ignore.message-delete");

                    b.Property<string[]>("ChannelsIgnoreMessageEdit")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("channels.ignore.message-edit");

                    b.Property<string[]>("ChannelsIgnoreReactionAdd")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("channels.ignore.reaction-add");

                    b.Property<string>("ChannelsLogsChannelCreate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.channel-create");

                    b.Property<string>("ChannelsLogsChannelDelete")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.channel-delete");

                    b.Property<string>("ChannelsLogsChannelUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.channel-update");

                    b.Property<string>("ChannelsLogsEmojiCreate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.emoji-create");

                    b.Property<string>("ChannelsLogsEmojiDelete")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.emoji-delete");

                    b.Property<string>("ChannelsLogsEmojiUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.emoji-update");

                    b.Property<string>("ChannelsLogsImage")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.image");

                    b.Property<string>("ChannelsLogsMemberAdd")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.member-add");

                    b.Property<string>("ChannelsLogsMemberNickNameUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.member-nickname-update");

                    b.Property<string>("ChannelsLogsMemberRemove")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.member-remove");

                    b.Property<string>("ChannelsLogsMemberRoleUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.member-roles-update");

                    b.Property<string>("ChannelsLogsMemberUserNameUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.member-username-update");

                    b.Property<string>("ChannelsLogsMessageDelete")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.message-delete");

                    b.Property<string>("ChannelsLogsMessageDeleteNsfw")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.message-delete-nsfw");

                    b.Property<string>("ChannelsLogsMessageUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.message-update");

                    b.Property<string>("ChannelsLogsMessageUpdateNsfw")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.message-update-nsfw");

                    b.Property<string>("ChannelsLogsModeration")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.moderation");

                    b.Property<string>("ChannelsLogsPrune")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.prune");

                    b.Property<string>("ChannelsLogsReaction")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.reaction");

                    b.Property<string>("ChannelsLogsRoleCreate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.role-create");

                    b.Property<string>("ChannelsLogsRoleDelete")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.role-delete");

                    b.Property<string>("ChannelsLogsRoleUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.role-update");

                    b.Property<string>("ChannelsLogsServerUpdate")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.logs.server-update");

                    b.Property<string>("ChannelsSpam")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("channels.spam");

                    b.Property<string>("CommandAutodelete")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("command-auto-delete");

                    b.Property<string>("CustomCommands")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("custom-commands");

                    b.Property<bool>("DisableNaturalPrefix")
                        .HasColumnType("boolean")
                        .HasColumnName("disable-natural-prefix");

                    b.Property<string[]>("DisabledChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("disabled-channels");

                    b.Property<string[]>("DisabledCommands")
                        .IsRequired()
                        .HasColumnType("character varying(32)[]")
                        .HasColumnName("disabled-commands");

                    b.Property<string>("DisabledCommandsChannels")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("disabled-commands-channels");

                    b.Property<bool>("EventsBanAdd")
                        .HasColumnType("boolean")
                        .HasColumnName("events.ban-add");

                    b.Property<bool>("EventsBanRemove")
                        .HasColumnType("boolean")
                        .HasColumnName("events.ban-remove");

                    b.Property<bool>("EventsMemberUsernameUpdate")
                        .HasColumnType("boolean")
                        .HasColumnName("events.member-username-update");

                    b.Property<bool>("EventsTwemojiReactions")
                        .HasColumnType("boolean")
                        .HasColumnName("events.twemoji-reactions");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("language");

                    b.Property<bool>("MessagesAnnouncementEmbed")
                        .HasColumnType("boolean")
                        .HasColumnName("messages.announcement-embed");

                    b.Property<bool?>("MessagesAutoDeleteIgnoredAll")
                        .IsRequired()
                        .HasColumnType("boolean")
                        .HasColumnName("messages.auto-delete.ignored-all");

                    b.Property<string[]>("MessagesAutoDeleteIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("messages.auto-delete.ignored-channels");

                    b.Property<string[]>("MessagesAutoDeleteIgnoredCommands")
                        .IsRequired()
                        .HasColumnType("character varying(32)[]")
                        .HasColumnName("messages.auto-delete.ignored-commands");

                    b.Property<string[]>("MessagesAutoDeleteIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("messages.auto-delete.ignored-roles");

                    b.Property<string>("MessagesFarewell")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("messages.farewell");

                    b.Property<long?>("MessagesFarewellAutoDelete")
                        .HasColumnType("bigint")
                        .HasColumnName("messages.farewell-auto-delete");

                    b.Property<string>("MessagesGreeting")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("messages.greeting");

                    b.Property<long?>("MessagesGreetingAutoDelete")
                        .HasColumnType("bigint")
                        .HasColumnName("messages.greeting-auto-delete");

                    b.Property<string[]>("MessagesIgnoreChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("messages.ignore-channels");

                    b.Property<string>("MessagesJoinDm")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)")
                        .HasColumnName("messages.join-dm");

                    b.Property<bool>("MessagesModerationAutoDelete")
                        .HasColumnType("boolean")
                        .HasColumnName("messages.moderation-auto-delete");

                    b.Property<bool>("MessagesModerationDm")
                        .HasColumnType("boolean")
                        .HasColumnName("messages.moderation-dm");

                    b.Property<bool?>("MessagesModerationMessageDisplay")
                        .IsRequired()
                        .HasColumnType("boolean")
                        .HasColumnName("messages.moderation-message-display");

                    b.Property<bool?>("MessagesModerationReasonDisplay")
                        .IsRequired()
                        .HasColumnType("boolean")
                        .HasColumnName("messages.moderation-reason-display");

                    b.Property<bool?>("MessagesModeratorNameDisplay")
                        .IsRequired()
                        .HasColumnType("boolean")
                        .HasColumnName("messages.moderator-name-display");

                    b.Property<bool?>("MusicAllowStreams")
                        .IsRequired()
                        .HasColumnType("boolean")
                        .HasColumnName("music.allow-streams");

                    b.Property<string[]>("MusicAllowedRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("music.allowed-roles");

                    b.Property<string[]>("MusicAllowedVoiceChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("music.allowed-voice-channels");

                    b.Property<short>("MusicDefaultVolume")
                        .HasColumnType("smallint")
                        .HasColumnName("music.default-volume");

                    b.Property<int>("MusicMaximumDuration")
                        .HasColumnType("integer")
                        .HasColumnName("music.maximum-duration");

                    b.Property<short>("MusicMaximumEntriesPerUser")
                        .HasColumnType("smallint")
                        .HasColumnName("music.maximum-entries-per-user");

                    b.Property<bool>("NoMentionSpamAlerts")
                        .HasColumnType("boolean")
                        .HasColumnName("no-mention-spam.alerts");

                    b.Property<bool>("NoMentionSpamEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("no-mention-spam.enabled");

                    b.Property<short>("NoMentionSpamMentionsAllowed")
                        .HasColumnType("smallint")
                        .HasColumnName("no-mention-spam.mentions-allowed");

                    b.Property<int>("NoMentionSpamTimePeriod")
                        .HasColumnType("integer")
                        .HasColumnName("no-mention-spam.time-period");

                    b.Property<string>("NotificationsStreamsTwitchStreamers")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("notifications.streams.twitch.streamers");

                    b.Property<string>("PermissionsRoles")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("permissions.roles");

                    b.Property<string>("PermissionsUsers")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("permissions.users");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("prefix");

                    b.Property<string>("ReactionRoles")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("reaction-roles");

                    b.Property<string[]>("RolesAdmin")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("roles.admin");

                    b.Property<string>("RolesAuto")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("roles.auto");

                    b.Property<string[]>("RolesDj")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("roles.dj");

                    b.Property<string>("RolesInitial")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.initial");

                    b.Property<string>("RolesInitialBots")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.initial-bots");

                    b.Property<string>("RolesInitialHumans")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.initial-humans");

                    b.Property<string[]>("RolesModerator")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("roles.moderator");

                    b.Property<string>("RolesMuted")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.muted");

                    b.Property<string[]>("RolesPublic")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("roles.public");

                    b.Property<bool>("RolesRemoveInitial")
                        .HasColumnType("boolean")
                        .HasColumnName("roles.remove-initial");

                    b.Property<string>("RolesRestrictedAttachment")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.restricted-attachment");

                    b.Property<string>("RolesRestrictedEmbed")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.restricted-embed");

                    b.Property<string>("RolesRestrictedEmoji")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.restricted-emoji");

                    b.Property<string>("RolesRestrictedReaction")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.restricted-reaction");

                    b.Property<string>("RolesRestrictedVoice")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.restricted-voice");

                    b.Property<string>("RolesSubscriber")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("roles.subscriber");

                    b.Property<string>("RolesUniqueRoleSets")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("roles.unique-role-sets");

                    b.Property<bool>("SelfmodAttachmentsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.attachments.enabled");

                    b.Property<short>("SelfmodAttachmentsHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.attachments.hard-action");

                    b.Property<long?>("SelfmodAttachmentsHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.attachments.hard-action-duration");

                    b.Property<string[]>("SelfmodAttachmentsIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.attachments.ignored-channels");

                    b.Property<string[]>("SelfmodAttachmentsIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.attachments.ignored-roles");

                    b.Property<short>("SelfmodAttachmentsSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.attachments.soft-action");

                    b.Property<int>("SelfmodAttachmentsThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.attachments.threshold-duration");

                    b.Property<short>("SelfmodAttachmentsThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.attachments.threshold-maximum");

                    b.Property<bool>("SelfmodCapitalsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.capitals.enabled");

                    b.Property<short>("SelfmodCapitalsHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.capitals.hard-action");

                    b.Property<long?>("SelfmodCapitalsHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.capitals.hard-action-duration");

                    b.Property<string[]>("SelfmodCapitalsIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.capitals.ignored-channels");

                    b.Property<string[]>("SelfmodCapitalsIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.capitals.ignored-roles");

                    b.Property<short>("SelfmodCapitalsMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.capitals.maximum");

                    b.Property<short>("SelfmodCapitalsMinimum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.capitals.minimum");

                    b.Property<short>("SelfmodCapitalsSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.capitals.soft-action");

                    b.Property<int>("SelfmodCapitalsThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.capitals.threshold-duration");

                    b.Property<short>("SelfmodCapitalsThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.capitals.threshold-maximum");

                    b.Property<bool>("SelfmodFilterEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.filter.enabled");

                    b.Property<short>("SelfmodFilterHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.filter.hard-action");

                    b.Property<long?>("SelfmodFilterHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.filter.hard-action-duration");

                    b.Property<string[]>("SelfmodFilterIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.filter.ignored-channels");

                    b.Property<string[]>("SelfmodFilterIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.filter.ignored-roles");

                    b.Property<string[]>("SelfmodFilterRaw")
                        .IsRequired()
                        .HasColumnType("character varying(32)[]")
                        .HasColumnName("selfmod.filter.raw");

                    b.Property<short>("SelfmodFilterSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.filter.soft-action");

                    b.Property<int>("SelfmodFilterThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.filter.threshold-duration");

                    b.Property<short>("SelfmodFilterThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.filter.threshold-maximum");

                    b.Property<string[]>("SelfmodIgnoreChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.ignored-channels");

                    b.Property<bool>("SelfmodInvitesEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.invites.enabled");

                    b.Property<short>("SelfmodInvitesHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.invites.hard-action");

                    b.Property<long?>("SelfmodInvitesHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.invites.hard-action-duration");

                    b.Property<string[]>("SelfmodInvitesIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.invites.ignored-channels");

                    b.Property<string[]>("SelfmodInvitesIgnoredCodes")
                        .IsRequired()
                        .HasColumnType("character varying[]")
                        .HasColumnName("selfmod.invites.ignored-codes");

                    b.Property<string[]>("SelfmodInvitesIgnoredGuilds")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.invites.ignored-guilds");

                    b.Property<string[]>("SelfmodInvitesIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.invites.ignored-roles");

                    b.Property<short>("SelfmodInvitesSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.invites.soft-action");

                    b.Property<int>("SelfmodInvitesThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.invites.threshold-duration");

                    b.Property<short>("SelfmodInvitesThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.invites.threshold-maximum");

                    b.Property<string[]>("SelfmodLinksAllowed")
                        .IsRequired()
                        .HasColumnType("character varying(128)[]")
                        .HasColumnName("selfmod.links.allowed");

                    b.Property<bool>("SelfmodLinksEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.links.enabled");

                    b.Property<short>("SelfmodLinksHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.links.hard-action");

                    b.Property<long?>("SelfmodLinksHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.links.hard-action-duration");

                    b.Property<string[]>("SelfmodLinksIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.links.ignored-channels");

                    b.Property<string[]>("SelfmodLinksIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.links.ignored-roles");

                    b.Property<short>("SelfmodLinksSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.links.soft-action");

                    b.Property<int>("SelfmodLinksThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.links.threshold-duration");

                    b.Property<short>("SelfmodLinksThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.links.threshold-maximum");

                    b.Property<bool>("SelfmodMessagesEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.messages.enabled");

                    b.Property<short>("SelfmodMessagesHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.messages.hard-action");

                    b.Property<long?>("SelfmodMessagesHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.messages.hard-action-duration");

                    b.Property<string[]>("SelfmodMessagesIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.messages.ignored-channels");

                    b.Property<string[]>("SelfmodMessagesIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.messages.ignored-roles");

                    b.Property<short>("SelfmodMessagesMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.messages.maximum");

                    b.Property<short>("SelfmodMessagesQueueSize")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.messages.queue-size");

                    b.Property<short>("SelfmodMessagesSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.messages.soft-action");

                    b.Property<int>("SelfmodMessagesThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.messages.threshold-duration");

                    b.Property<short>("SelfmodMessagesThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.messages.threshold-maximum");

                    b.Property<bool>("SelfmodNewlinesEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.newlines.enabled");

                    b.Property<short>("SelfmodNewlinesHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.newlines.hard-action");

                    b.Property<long?>("SelfmodNewlinesHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.newlines.hard-action-duration");

                    b.Property<string[]>("SelfmodNewlinesIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.newlines.ignored-channels");

                    b.Property<string[]>("SelfmodNewlinesIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.newlines.ignored-roles");

                    b.Property<short>("SelfmodNewlinesMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.newlines.maximum");

                    b.Property<short>("SelfmodNewlinesSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.newlines.soft-action");

                    b.Property<int>("SelfmodNewlinesThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.newlines.threshold-duration");

                    b.Property<short>("SelfmodNewlinesThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.newlines.threshold-maximum");

                    b.Property<string[]>("SelfmodReactionsAllowed")
                        .IsRequired()
                        .HasColumnType("character varying(128)[]")
                        .HasColumnName("selfmod.reactions.allowed");

                    b.Property<string[]>("SelfmodReactionsBlocked")
                        .IsRequired()
                        .HasColumnType("character varying(128)[]")
                        .HasColumnName("selfmod.reactions.blocked");

                    b.Property<bool>("SelfmodReactionsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("selfmod.reactions.enabled");

                    b.Property<short>("SelfmodReactionsHardAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.reactions.hard-action");

                    b.Property<long?>("SelfmodReactionsHardActionDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("selfmod.reactions.hard-action-duration");

                    b.Property<string[]>("SelfmodReactionsIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.reactions.ignored-channels");

                    b.Property<string[]>("SelfmodReactionsIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("selfmod.reactions.ignored-roles");

                    b.Property<short>("SelfmodReactionsMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.reactions.maximum");

                    b.Property<short>("SelfmodReactionsSoftAction")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.reactions.soft-action");

                    b.Property<int>("SelfmodReactionsThresholdDuration")
                        .HasColumnType("integer")
                        .HasColumnName("selfmod.reactions.threshold-duration");

                    b.Property<short>("SelfmodReactionsThresholdMaximum")
                        .HasColumnType("smallint")
                        .HasColumnName("selfmod.reactions.threshold-maximum");

                    b.Property<string>("SocialAchieveChannel")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("social.achieve-channel");

                    b.Property<string>("SocialAchieveLevel")
                        .HasColumnType("text")
                        .HasColumnName("social.achieve-level");

                    b.Property<short>("SocialAchieveMultiple")
                        .HasColumnType("smallint")
                        .HasColumnName("social.achieve-multiple");

                    b.Property<string>("SocialAchieveRole")
                        .HasColumnType("text")
                        .HasColumnName("social.achieve-role");

                    b.Property<bool?>("SocialEnabled")
                        .IsRequired()
                        .HasColumnType("boolean")
                        .HasColumnName("social.enabled");

                    b.Property<string[]>("SocialIgnoredChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("social.ignored-channels");

                    b.Property<string[]>("SocialIgnoredRoles")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("social.ignored-roles");

                    b.Property<decimal>("SocialMultiplier")
                        .HasColumnType("numeric")
                        .HasColumnName("social.multiplier");

                    b.Property<string>("StarboardChannel")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("starboard.channel");

                    b.Property<string>("StarboardEmoji")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)")
                        .HasColumnName("starboard.emoji");

                    b.Property<string[]>("StarboardIgnoreChannels")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("starboard.ignored-channels");

                    b.Property<long?>("StarboardMaximumAge")
                        .HasColumnType("bigint")
                        .HasColumnName("starboard.maximum-age");

                    b.Property<short>("StarboardMinimum")
                        .HasColumnType("smallint")
                        .HasColumnName("starboard.minimum");

                    b.Property<bool>("StarboardSelfStar")
                        .HasColumnType("boolean")
                        .HasColumnName("starboard.self-star");

                    b.Property<string>("StickyRoles")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("sticky-roles");

                    b.Property<string>("SuggestionsChannel")
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)")
                        .HasColumnName("suggestions.channel");

                    b.Property<string>("SuggestionsEmojisDownvote")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("suggestions.emojis.downvote");

                    b.Property<string>("SuggestionsEmojisUpvote")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("suggestions.emojis.upvote");

                    b.Property<bool>("SuggestionsOnActionDm")
                        .HasColumnType("boolean")
                        .HasColumnName("suggestions.on-action.dm");

                    b.Property<bool>("SuggestionsOnActionHideAuthor")
                        .HasColumnType("boolean")
                        .HasColumnName("suggestions.on-action.hide-author");

                    b.Property<bool>("SuggestionsOnActionRepost")
                        .HasColumnType("boolean")
                        .HasColumnName("suggestions.on-action.repost");

                    b.Property<string>("TriggerAlias")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("trigger.alias");

                    b.Property<string>("TriggerIncludes")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("trigger.includes");

                    b.Property<string>("YoutubeUploadLiveChannel")
                        .HasColumnType("character varying(19)")
                        .HasColumnName("notifications.youtube.live.channel");

                    b.Property<string>("YoutubeUploadLiveMessage")
                        .HasColumnType("text")
                        .HasColumnName("notifications.youtube.live.message");

                    b.Property<string>("YoutubeUploadNotificationChannel")
                        .HasColumnType("character varying(19)")
                        .HasColumnName("notifications.youtube.upload.channel");

                    b.Property<string>("YoutubeUploadNotificationMessage")
                        .HasColumnType("text")
                        .HasColumnName("notifications.youtube.upload.message");

                    b.HasKey("Id")
                        .HasName("pk_guilds");

                    b.ToTable("guilds");
                });

            modelBuilder.Entity("Database.Models.Entities.YoutubeSubscription", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("id");

                    b.Property<string[]>("AlreadySeenIds")
                        .IsRequired()
                        .HasColumnType("character varying(11)[]")
                        .HasColumnName("already_seen_ids");

                    b.Property<string>("ChannelTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("channel_title");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expires_at");

                    b.Property<string[]>("GuildIds")
                        .IsRequired()
                        .HasColumnType("character varying(19)[]")
                        .HasColumnName("guild_ids");

                    b.HasKey("Id")
                        .HasName("pk_youtube_subscription");

                    b.ToTable("youtube_subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
